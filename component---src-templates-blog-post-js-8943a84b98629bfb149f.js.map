{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./src/components/Bio.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","_this$props$pageConte","pageContext","previous","next","coverImage","frontmatter","cover_image","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_7__","location","_components_Seo__WEBPACK_IMPORTED_MODULE_8__","description","excerpt","Boolean","gatsby_image__WEBPACK_IMPORTED_MODULE_5___default","sizes","childImageSharp","alt","style","marginLeft","marginRight","marginBottom","rhythm","maxHeight","Object","assign","scale","display","justifyContent","color","marginTop","date","timeToRead","textAlign","dangerouslySetInnerHTML","__html","html","_components_Bio__WEBPACK_IMPORTED_MODULE_6__","flexWrap","listStyle","padding","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","fields","slug","rel","React","Component","pageQuery","bioQuery","Bio","query","author","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","avatar","minWidth","borderRadius","imgStyle","_public_static_d_4184873897_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"kPASMA,4FACJC,OAAA,WACE,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYJ,KAAKC,MAAMC,KAAKG,KAAKC,aAAaC,MAF7CC,EAGoBR,KAAKC,MAAMQ,YAA9BC,EAHDF,EAGCE,SAAUC,EAHXH,EAGWG,KACZC,EAAab,EAAKc,YAAYC,YAEpC,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUnB,KAAKC,MAAMkB,SAAUZ,MAAOH,GAC5CW,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEb,MAAOR,EAAKc,YAAYN,MACxBc,YAAatB,EAAKc,YAAYQ,aAAetB,EAAKuB,UAEpDP,EAAAC,EAAAC,cAAA,UAAKlB,EAAKc,YAAYN,OACrBgB,QAAQX,IACPG,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CACES,MAAOb,EAAWc,gBAAgBD,MAClCE,IAAI,mBACJC,MAAO,CACLC,WAAY,OACZC,YAAa,OACbC,aAAcC,YAAO,GACrBC,UAAW,WAIjBlB,EAAAC,EAAAC,cAAA,KACEW,MAAKM,OAAAC,OAAA,GACAC,aAAM,IADN,CAEHC,QAAO,OACPC,eAAgB,gBAChBC,MAAK,mBACLR,aAAcC,YAAO,GACrBQ,UAAWR,aAAQ,MAGrBjB,EAAAC,EAAAC,cAAA,YAAOlB,EAAKc,YAAY4B,MACxB1B,EAAAC,EAAAC,cAAA,YAAOlB,EAAK2C,WAAZ,cAEF3B,EAAAC,EAAAC,cAAA,OACEW,MAAO,CAAEe,UAAW,WACpBC,wBAAyB,CAAEC,OAAQ9C,EAAK+C,QAE1C/B,EAAAC,EAAAC,cAAA,MACEW,MAAO,CACLG,aAAcC,YAAO,MAGzBjB,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,MAEAhC,EAAAC,EAAAC,cAAA,MACEW,MAAO,CACLS,QAAO,OACPW,SAAQ,OACRV,eAAc,gBACdW,UAAS,OACTC,QAAS,IAGXnC,EAAAC,EAAAC,cAAA,UACGP,GACCK,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAMC,GAAI1C,EAAS2C,OAAOC,KAAMC,IAAI,QAApC,KACK7C,EAASG,YAAYN,QAI9BQ,EAAAC,EAAAC,cAAA,UACGN,GACCI,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAMC,GAAIzC,EAAK0C,OAAOC,KAAMC,IAAI,QAC7B5C,EAAKE,YAAYN,MADpB,aApEiBiD,IAAMC,WA+EtB5D,YAER,IAAM6D,EAAS,uHCvCtB,IAAMC,EAAQ,aAiBCC,IAvDf,WACE,OACE7C,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CACEU,MAAOF,EACP7D,OAAQ,SAAAI,GAAQ,IACN4D,EAAW5D,EAAKG,KAAKC,aAArBwD,OACR,OACE/C,EAAAC,EAAAC,cAAA,OACEW,MAAO,CACLS,QAAO,OACPN,aAAcC,YAAO,OAGvBjB,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,CACEgD,MAAO9D,EAAK+D,OAAOvC,gBAAgBsC,MACnCrC,IAAKmC,EACLlC,MAAO,CACLE,YAAaE,YAAO,IACpBD,aAAc,EACdmC,SAAU,GACVC,aAAY,QAEdC,SAAU,CACRD,aAAY,SAGhBpD,EAAAC,EAAAC,cAAA,2GAxBRf,KAAAmE","file":"component---src-templates-blog-post-js-8943a84b98629bfb149f.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { rhythm, scale } from \"../utils/typography\"\nimport Image from \"gatsby-image\"\n\nimport Bio from \"../components/Bio\"\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/Seo\"\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n    const coverImage = post.frontmatter.cover_image\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <h1>{post.frontmatter.title}</h1>\n        {Boolean(coverImage) && (\n          <Image\n            sizes={coverImage.childImageSharp.sizes}\n            alt=\"Post Cover Image\"\n            style={{\n              marginLeft: \"-50%\",\n              marginRight: \"-50%\",\n              marginBottom: rhythm(2),\n              maxHeight: \"28rem\",\n            }}\n          />\n        )}\n        <p\n          style={{\n            ...scale(-1 / 10),\n            display: `flex`,\n            justifyContent: \"space-between\",\n            color: `var(--secondary)`,\n            marginBottom: rhythm(1),\n            marginTop: rhythm(-1),\n          }}\n        >\n          <span>{post.frontmatter.date}</span>\n          <span>{post.timeToRead} min read</span>\n        </p>\n        <div\n          style={{ textAlign: \"justify\" }}\n          dangerouslySetInnerHTML={{ __html: post.html }}\n        />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <Bio />\n\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      timeToRead\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        cover_image {\n          publicURL\n          childImageSharp {\n            sizes(maxWidth: 1240) {\n              srcSet\n              sizes\n              src\n              aspectRatio\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","/**\n * Bio component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nimport { rhythm } from \"../utils/typography\"\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author } = data.site.siteMetadata\n        return (\n          <div\n            style={{\n              display: `flex`,\n              marginBottom: rhythm(2.5),\n            }}\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />\n            <p>\n              I am passionate by functional programming, software architecture\n              and making simple code.\n              {` `}\n            </p>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/me.png/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n      }\n    }\n  }\n`\n\nexport default Bio\n"],"sourceRoot":""}