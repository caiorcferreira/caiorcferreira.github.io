{"version":3,"sources":["webpack:///./src/components/Bio.component.js","webpack:///./src/templates/blog-post.js"],"names":["BioWrapper","styled","div","rhythm","Avatar","Image","bioQuery","Bio","query","render","data","author","site","siteMetadata","fixed","avatar","childImageSharp","alt","imgStyle","borderRadius","BlogPostTemplate","post","this","props","markdownRemark","siteTitle","title","pageContext","previous","next","coverImage","frontmatter","cover_image","tags","split","map","t","trim","location","description","excerpt","keywords","Boolean","CoverImage","sizes","Metadata","PostDateAndTime","date","timeToRead","TagListWrapper","Tag","Content","dangerouslySetInnerHTML","__html","html","Divider","Navigation","to","fields","slug","rel","React","Component","p","section","hr","ul"],"mappings":"2FAAA,kFAkCA,IAAMA,EAAaC,IAAOC,IAAV,+EAAGD,CAAH,iCAEAE,YAAO,IAGjBC,EAASH,YAAOI,KAAV,2EAAGJ,CAAH,wEACME,YAAO,KAMnBG,EAAQ,aAiBCC,IAxDf,WACE,OACE,kBAAC,cAAD,CACEC,MAAOF,EACPG,OAAQ,SAAAC,GAAS,IACPC,EAAWD,EAAKE,KAAKC,aAArBF,OACR,OACE,kBAACX,EAAD,KACE,kBAACI,EAAD,CACEU,MAAOJ,EAAKK,OAAOC,gBAAgBF,MACnCG,IAAKN,EACLO,SAAU,CACRC,aAAa,SAGjB,iI,2KCZNC,E,kGACJX,OAAA,WACE,IAAMY,EAAOC,KAAKC,MAAMb,KAAKc,eACvBC,EAAYH,KAAKC,MAAMb,KAAKE,KAAKC,aAAaa,MAF7C,EAGoBJ,KAAKC,MAAMI,YAA9BC,EAHD,EAGCA,SAAUC,EAHX,EAGWA,KACZC,EAAaT,EAAKU,YAAYC,YAC9BC,EAAOZ,EAAKU,YAAYE,KAAKC,MAAM,KAAKC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,WAAW,GAEpE,OACE,kBAAC,IAAD,CAAQC,SAAUhB,KAAKC,MAAMe,SAAUZ,MAAOD,GAC5C,kBAAC,IAAD,CACEC,MAAOL,EAAKU,YAAYL,MACxBa,YAAalB,EAAKU,YAAYQ,aAAelB,EAAKmB,QAClDC,SAAUR,IAEZ,4BAAKZ,EAAKU,YAAYL,OACrBgB,QAAQZ,IACP,kBAACa,EAAD,CACEC,MAAOd,EAAWd,gBAAgB4B,MAClC3B,IAAI,qBAGR,kBAAC4B,EAAD,KACE,kBAACC,EAAD,KACE,8BAAOzB,EAAKU,YAAYgB,MACxB,8BAAO1B,EAAK2B,WAAZ,cAEF,kBAACC,EAAD,KACGhB,EAAKE,KAAI,SAAAC,GAAC,OACT,kBAACc,EAAD,SAAOd,QAIb,kBAACe,EAAD,CAASC,wBAAyB,CAAEC,OAAQhC,EAAKiC,QACjD,kBAACC,EAAD,MACA,kBAAC,IAAD,MAEA,kBAACC,EAAD,KACE,4BACG5B,GACC,kBAAC,OAAD,CAAM6B,GAAI7B,EAAS8B,OAAOC,KAAMC,IAAI,QAApC,KACKhC,EAASG,YAAYL,QAI9B,4BACGG,GACC,kBAAC,OAAD,CAAM4B,GAAI5B,EAAK6B,OAAOC,KAAMC,IAAI,QAC7B/B,EAAKE,YAAYL,MADpB,U,GA/CiBmC,IAAMC,WA0D/BnB,EAAa1C,YAAOI,KAAV,wEAAGJ,CAAH,sIAGGE,YAAO,IASpB0C,EAAW5C,IAAO8D,EAAV,sEAAG9D,CAAH,8CAEKE,YAAO,IAGpB2C,EAAkB7C,IAAO8D,EAAV,6EAAG9D,CAAH,mEAMfgD,EAAiBhD,IAAO8D,EAAV,4EAAG9D,CAAH,4DAQdiD,EAAMjD,IAAO8D,EAAV,iEAAG9D,CAAH,+MAESE,YAAO,EAAI,GAChBA,YAAO,KAAWA,YAAO,EAAI,IAepCgD,EAAUlD,IAAO+D,QAAV,qEAAG/D,CAAH,yBAIPsD,EAAUtD,IAAOgE,GAAV,qEAAGhE,CAAH,uBACME,YAAO,IAGpBqD,EAAavD,IAAOiE,GAAV,wEAAGjE,CAAH,0FAQDmB","file":"component---src-templates-blog-post-js-48fe6b50030107f110f1.js","sourcesContent":["import React from \"react\"\nimport Image from \"gatsby-image\"\nimport styled from \"styled-components\"\n\nimport { StaticQuery, graphql } from \"gatsby\"\nimport { rhythm } from \"../utils/typography\"\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author } = data.site.siteMetadata\n        return (\n          <BioWrapper>\n            <Avatar\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />\n            <p>\n              I am passionate by functional programming, software architecture\n              and making simple code.\n              {` `}\n            </p>\n          </BioWrapper>\n        )\n      }}\n    />\n  )\n}\n\nconst BioWrapper = styled.div`\n  display: flex;\n  margin-top: ${rhythm(1)};\n`\n\nconst Avatar = styled(Image)`\n  margin-right: ${rhythm(1 / 2)};\n  margin-bottom: 0;\n  min-width: 50px;\n  border-radius: 100%;\n`\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/me.png/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n      }\n    }\n  }\n`\n\nexport default Bio\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link, graphql } from \"gatsby\"\nimport { rhythm } from \"../utils/typography\"\nimport Image from \"gatsby-image\"\n\nimport Bio from \"../components/Bio.component\"\nimport Layout from \"../components/Layout.component\"\nimport SEO from \"../components/Seo.component\"\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n    const coverImage = post.frontmatter.cover_image\n    const tags = post.frontmatter.tags.split(\",\").map(t => t.trim()) || []\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n          keywords={tags}\n        />\n        <h1>{post.frontmatter.title}</h1>\n        {Boolean(coverImage) && (\n          <CoverImage\n            sizes={coverImage.childImageSharp.sizes}\n            alt=\"Post Cover Image\"\n          />\n        )}\n        <Metadata>\n          <PostDateAndTime>\n            <span>{post.frontmatter.date}</span>\n            <span>{post.timeToRead} min read</span>\n          </PostDateAndTime>\n          <TagListWrapper>\n            {tags.map(t => (\n              <Tag>#{t}</Tag>\n            ))}\n          </TagListWrapper>\n        </Metadata>\n        <Content dangerouslySetInnerHTML={{ __html: post.html }} />\n        <Divider />\n        <Bio />\n\n        <Navigation>\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </Navigation>\n      </Layout>\n    )\n  }\n}\n\nconst CoverImage = styled(Image)`\n  margin-left: -50%;\n  margin-right: -50%;\n  margin-bottom: ${rhythm(1)};\n  max-height: 28rem;\n\n  @media (max-width: 768px) {\n    margin-left: -5%;\n    margin-right: -5%;\n  }\n`\n\nconst Metadata = styled.p`\n  color: var(--secondary);\n  margin-bottom: ${rhythm(1)};\n`\n\nconst PostDateAndTime = styled.p`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 4px;\n`\n\nconst TagListWrapper = styled.p`\n  display: flex;\n\n  @media (max-width: 768px) {\n    flex-wrap: wrap;\n  }\n`\n\nconst Tag = styled.p`\n  margin-bottom: 0;\n  margin-right: ${rhythm(1 / 4)};\n  padding: ${rhythm(1 / 50)} ${rhythm(1 / 3)};\n  border-radius: 3px;\n  background: var(--secondary);\n  color: var(--bg);\n\n  @media (max-width: 768px) {\n    &:last-child {\n      margin-bottom: 5px;\n    }\n\n    margin-bottom: 5px;\n    flex-wrap: wrap;\n  }\n`\n\nconst Content = styled.section`\n  text-align: justify;\n`\n\nconst Divider = styled.hr`\n  margin-bottom: ${rhythm(1)};\n`\n\nconst Navigation = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  list-style: none;\n  padding: 0;\n`\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      timeToRead\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        tags\n        cover_image {\n          publicURL\n          childImageSharp {\n            sizes(maxWidth: 1240) {\n              srcSet\n              sizes\n              src\n              aspectRatio\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}