{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./src/components/Bio.component.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","_this$props$pageConte","pageContext","previous","next","coverImage","frontmatter","cover_image","tags","split","map","t","trim","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_Layout_component__WEBPACK_IMPORTED_MODULE_8__","location","_components_Seo_component__WEBPACK_IMPORTED_MODULE_9__","description","excerpt","keywords","Boolean","CoverImage","sizes","childImageSharp","alt","Metadata","PostDateAndTime","date","timeToRead","TagListWrapper","Tag","Content","dangerouslySetInnerHTML","__html","html","Divider","_components_Bio_component__WEBPACK_IMPORTED_MODULE_7__","Navigation","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","fields","slug","rel","React","Component","styled","Image","withConfig","displayName","componentId","rhythm","p","section","hr","ul","pageQuery","BioWrapper","div","Avatar","bioQuery","Bio","gatsby__WEBPACK_IMPORTED_MODULE_5__","query","author","fixed","avatar","imgStyle","borderRadius","_public_static_d_4184873897_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-templates-blog-post-js-d626f14b9ec9b291f70e.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link, graphql } from \"gatsby\"\nimport { rhythm } from \"../utils/typography\"\nimport Image from \"gatsby-image\"\n\nimport Bio from \"../components/Bio.component\"\nimport Layout from \"../components/Layout.component\"\nimport SEO from \"../components/Seo.component\"\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n    const coverImage = post.frontmatter.cover_image\n    const tags = post.frontmatter.tags.split(\",\").map(t => t.trim()) || []\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n          keywords={tags}\n        />\n        <h1>{post.frontmatter.title}</h1>\n        {Boolean(coverImage) && (\n          <CoverImage\n            sizes={coverImage.childImageSharp.sizes}\n            alt=\"Post Cover Image\"\n          />\n        )}\n        <Metadata>\n          <PostDateAndTime>\n            <span>{post.frontmatter.date}</span>\n            <span>{post.timeToRead} min read</span>\n          </PostDateAndTime>\n          <TagListWrapper>\n            {tags.map(t => (\n              <Tag>#{t}</Tag>\n            ))}\n          </TagListWrapper>\n        </Metadata>\n        <Content dangerouslySetInnerHTML={{ __html: post.html }} />\n        <Divider />\n        <Bio />\n\n        <Navigation>\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </Navigation>\n      </Layout>\n    )\n  }\n}\n\nconst CoverImage = styled(Image)`\n  margin-left: -50%;\n  margin-right: -50%;\n  margin-bottom: ${rhythm(1)};\n  max-height: 28rem;\n\n  @media (max-width: 768px) {\n    margin-left: -5%;\n    margin-right: -5%;\n  }\n`\n\nconst Metadata = styled.p`\n  color: var(--secondary);\n  margin-bottom: ${rhythm(1)};\n`\n\nconst PostDateAndTime = styled.p`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 4px;\n`\n\nconst TagListWrapper = styled.p`\n  display: flex;\n\n  @media (max-width: 768px) {\n    flex-wrap: wrap;\n  }\n`\n\nconst Tag = styled.p`\n  margin-bottom: 0;\n  margin-right: ${rhythm(1 / 4)};\n  padding: ${rhythm(1 / 50)} ${rhythm(1 / 3)};\n  border-radius: 3px;\n  background: var(--secondary);\n  color: var(--bg);\n\n  @media (max-width: 768px) {\n    &:last-child {\n      margin-bottom: 5px;\n    }\n\n    margin-bottom: 5px;\n    flex-wrap: wrap;\n  }\n`\n\nconst Content = styled.section`\n  text-align: justify;\n`\n\nconst Divider = styled.hr`\n  margin-bottom: ${rhythm(1)};\n`\n\nconst Navigation = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  list-style: none;\n  padding: 0;\n`\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      timeToRead\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        tags\n        cover_image {\n          publicURL\n          childImageSharp {\n            sizes(maxWidth: 1240) {\n              srcSet\n              sizes\n              src\n              aspectRatio\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Image from \"gatsby-image\"\nimport styled from \"styled-components\"\n\nimport { StaticQuery, graphql } from \"gatsby\"\nimport { rhythm } from \"../utils/typography\"\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author } = data.site.siteMetadata\n        return (\n          <BioWrapper>\n            <Avatar\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />\n            <p>\n              I am passionate by functional programming, software architecture\n              and making simple code.\n              {` `}\n            </p>\n          </BioWrapper>\n        )\n      }}\n    />\n  )\n}\n\nconst BioWrapper = styled.div`\n  display: flex;\n  margin-top: ${rhythm(1)};\n`\n\nconst Avatar = styled(Image)`\n  margin-right: ${rhythm(1 / 2)};\n  margin-bottom: 0;\n  min-width: 50px;\n  border-radius: 100%;\n`\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/me.png/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n      }\n    }\n  }\n`\n\nexport default Bio\n"],"sourceRoot":""}